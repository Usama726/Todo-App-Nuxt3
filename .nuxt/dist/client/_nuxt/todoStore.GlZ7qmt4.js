import{M as a}from"./entry.CyTNAzuu.js";const c=a({id:"columns",state:()=>({columns:[]}),getters:{getColumns:s=>s.columns},actions:{addColumn(s){this.columns.unshift({title:s,date:s,tasks:[],showForm:!1}),this.saveToLocalStorage()},addColumnAtEnd(s){this.columns.push({title:s,date:s,tasks:[]}),this.saveToLocalStorage()},editColumnTitle(s,o){this.columns[s].title=o,this.saveToLocalStorage()},deleteColumn(s){this.columns.splice(s,1),this.saveToLocalStorage()},deleteAllColumns(){this.columns=[],this.saveToLocalStorage()},moveColumn(s,o){const t=[...this.columns],[e]=t.splice(s,1);t.splice(o,0,e),this.columns=t,this.saveToLocalStorage()},addTask(s,o){this.columns[s].tasks.unshift(o),this.saveToLocalStorage()},deleteTask(s,o){this.columns[s].tasks.splice(o,1),this.saveToLocalStorage()},updateTask(s,o,t){this.columns[s].tasks[o]=t,this.saveToLocalStorage()},loadFromLocalStorage(){const s=JSON.parse(localStorage.getItem("columns"));if(s)return this.columns=s},saveToLocalStorage(){localStorage.setItem("columns",JSON.stringify(this.columns))}}});export{c as u};
