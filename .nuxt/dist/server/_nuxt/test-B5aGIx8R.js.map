{"version":3,"file":"test-B5aGIx8R.js","sources":["../../../../store/crud.js","../../../../pages/test.vue"],"sourcesContent":["// tasks.js\n\nimport { defineStore } from 'pinia'\n\nexport const useTasksStore = defineStore({\n    id: 'tasks',\n    state: () => ({\n        columns: []\n    }),\n    actions: {\n        addColumn(title) {\n            this.columns.push({ title, tasks: [] })\n        },\n        addTask(columnIndex, task) {\n            this.columns[columnIndex].tasks.push(task)\n        },\n        updateTask(columnIndex, taskIndex, updatedTask) {\n            this.columns[columnIndex].tasks[taskIndex] = updatedTask\n        },\n        deleteTask(columnIndex, taskIndex) {\n            this.columns[columnIndex].tasks.splice(taskIndex, 1)\n        }\n    }\n})\n","<!-- Tasks.vue -->\n\n<template>\n    <div>\n        <div v-for=\"(column, colIndex) in columns\" :key=\"colIndex\">\n\n            <h2 class=\"my-2  text-xl\"> Column title: {{ column.title }}</h2>\n            <div v-for=\"(task, taskIndex) in column.tasks\" :key=\"taskIndex\" class=\"space-y-4\">\n                <p>{{ task.name }} </p>\n                <p>{{ task.lastName }} </p>\n                <p> {{ task.description }}</p>\n                <button @click=\"openEditForm(colIndex, taskIndex)\" class=\"mr-3\">Edit</button>\n                <button @click=\"deleteTask(colIndex, taskIndex)\">Delete</button>\n            </div>\n\n            <form @submit.prevent=\"addTask(colIndex)\">\n                <input v-model=\"newTask.name\" placeholder=\"Name\" required>\n                <input v-model=\"newTask.lastName\" placeholder=\"Last Name\" required>\n                <input v-model=\"newTask.description\" placeholder=\"Description\" required>\n                <button type=\"submit\">Add Task</button>\n            </form>\n        </div>\n\n        <div>\n            <h2>Add Column</h2>\n            <form @submit.prevent=\"addColumn\">\n                <input v-model=\"newColumnTitle\" placeholder=\"Column Title\" required>\n                <button type=\"submit\">Add Column</button>\n            </form>\n        </div>\n\n        <form v-if=\"showEditForm\" @submit.prevent=\"updateTask\">\n            <input v-model=\"editedTask.name\" placeholder=\"Name\" required>\n            <input v-model=\"editedTask.lastName\" placeholder=\"Last Name\" required>\n            <input v-model=\"editedTask.description\" placeholder=\"Description\" required>\n            <button type=\"submit\">Update Task</button>\n            <button @click=\"cancelEdit\">Cancel</button>\n        </form>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useTasksStore } from '/store/crud'\n\nconst store = useTasksStore()\n\nlet editColumnIndex = null\nlet editTaskIndex = null\nconst columns = store.columns\n\nconst editedTask = ref(null)\nconst showEditForm = ref(false)\n\nconst newTask = {\n    name: '',\n    lastName: '',\n    description: ''\n}\n\nconst newColumnTitle = ref('')\n\nfunction addTask(columnIndex) {\n    store.addTask(columnIndex, { ...newTask })\n    newTask.name = ''\n    newTask.lastName = ''\n    newTask.description = ''\n}\n\nfunction addColumn() {\n    if (newColumnTitle.value.trim() !== '') {\n        store.addColumn(newColumnTitle.value)\n        newColumnTitle.value = ''\n    }\n}\n\nfunction openEditForm(columnIndex, taskIndex) {\n    if (columns[columnIndex] && columns[columnIndex].tasks && columns[columnIndex].tasks[taskIndex]) {\n        editedTask.value = { ...columns[columnIndex].tasks[taskIndex] }\n        editColumnIndex = columnIndex\n        editTaskIndex = taskIndex\n        showEditForm.value = true\n    }\n}\n\nfunction updateTask() {\n    if (editedTask.value !== null && editColumnIndex !== null && editTaskIndex !== null) {\n        store.updateTask(editColumnIndex, editTaskIndex, editedTask.value)\n        editedTask.value = null\n        editColumnIndex = null\n        editTaskIndex = null\n        showEditForm.value = false\n    }\n}\nfunction cancelEdit() {\n    editedTask.value = null\n    showEditForm.value = false\n}\n\nfunction deleteTask(columnIndex, taskIndex) {\n    store.deleteTask(columnIndex, taskIndex)\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAIO,MAAM,gBAAgB,YAAY;AAAA,EACrC,IAAI;AAAA,EACJ,OAAO,OAAO;AAAA,IACV,SAAS,CAAE;AAAA,EACnB;AAAA,EACI,SAAS;AAAA,IACL,UAAU,OAAO;AACb,WAAK,QAAQ,KAAK,EAAE,OAAO,OAAO,CAAA,GAAI;AAAA,IACzC;AAAA,IACD,QAAQ,aAAa,MAAM;AACvB,WAAK,QAAQ,WAAW,EAAE,MAAM,KAAK,IAAI;AAAA,IAC5C;AAAA,IACD,WAAW,aAAa,WAAW,aAAa;AAC5C,WAAK,QAAQ,WAAW,EAAE,MAAM,SAAS,IAAI;AAAA,IAChD;AAAA,IACD,WAAW,aAAa,WAAW;AAC/B,WAAK,QAAQ,WAAW,EAAE,MAAM,OAAO,WAAW,CAAC;AAAA,IACtD;AAAA,EACJ;AACL,CAAC;;;;;ACsBD,UAAM,QAAQ,cAAe;AAI7B,UAAM,UAAU,MAAM;AAEtB,UAAM,aAAa,IAAI,IAAI;AAC3B,UAAM,eAAe,IAAI,KAAK;AAE9B,UAAM,UAAU;AAAA,MACZ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACjB;AAEA,UAAM,iBAAiB,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;"}